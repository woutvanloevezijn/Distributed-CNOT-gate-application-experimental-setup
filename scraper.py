import numpy as np

from pathlib import Path
import csv

# simple tool used to scrape all data files in a directory generated by the experiments and generate their sensitivity parameters

# calculate sensitiviy of an array of datapoints
def sensitiviy(data):
    xs = [point["x"] for point in data]
    means = [point["m"] for point in data]
    start_value = data[0]["x"]
    end_value = data[len(data)-1]["x"]
    # minimise the square error on a 2nd degree polynomial
    polyfit = np.polyfit(xs, means, 2)
    # calculate maximum slope in the given data range
    return max(abs(2*polyfit[0]*start_value+polyfit[1]),abs(2*polyfit[0]*end_value+[polyfit[1]]))

# directorty of the data files
directory = '/home/wout/Documents/TUDelft/CSE3000 RP/experiments/distributed_cnot/heralded_link'

for path in Path(directory).rglob('*.txt'):
    with open(path, 'r') as file:
        reader = csv.reader(file, delimiter=',')
        points = [[],[],[],[],[],[],[],[]]

        for row in reader:
            # read all data points
            if (len(row) == 4):
                if row[0] == "00":
                    points[0].append({"x": float(row[1]), "m": float(row[2])})
                if row[0] == "01":
                    points[1].append({"x": float(row[1]), "m": float(row[2])})
                if row[0] == "10":
                    points[2].append({"x": float(row[1]), "m": float(row[2])})
                if row[0] == "11":
                    points[3].append({"x": float(row[1]), "m": float(row[2])})
                if row[0] == "++":
                    points[4].append({"x": float(row[1]), "m": float(row[2])})
                if row[0] == "+-":
                    points[5].append({"x": float(row[1]), "m": float(row[2])})
                if row[0] == "-+":
                    points[6].append({"x": float(row[1]), "m": float(row[2])})
                if row[0] == "--":
                    points[7].append({"x": float(row[1]), "m": float(row[2])})

    # print all values
    print(path.name)
    for i in range(8):
        if len(points[i]) > 0: print("%.2f" % sensitiviy(points[i]))


